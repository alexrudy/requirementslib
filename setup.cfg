[metadata]
name = requirementslib
description = A tool for converting between pip-style and pipfile requirements.
url = https://github.com/sarugaku/requirementslib
author = Dan Ryan
author_email = dan@danryan.co
long_description = file: README.rst
license = MIT
license_file = LICENSE
keywords =
    pipfile
    requirements.txt
    pip
    requirementslib
    pipenv
    lockfile
    dependency resolver
    resolver
    dependencies
classifier =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.4
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Software Development :: Build Tools
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Utilities

[options]
zip_safe = true
python_requires = >=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*
setup_requires =
    invoke
    vistir
    setuptools>=38.2.5
    wheel
    parver
install_requires =
    appdirs
    attrs
    colorama
    distlib>=0.2.8
    first
    packaging
    pep517
    pip-shims>=0.3.2
    plette[validation]
    requests
    scandir;python_version<"3.5"
    setuptools>=38.2.5
    six
    tomlkit>=0.5.2
    typing;python_version<"3.5"
    vistir>=0.3.0

[options.extras_require]
tests =
    pytest
    coverage
    twine
    readme-renderer[md]
    pytest-xdist
    pytest-cov
    pytest-timeout

[bdist_wheel]
universal = 1

[tool:pytest]
strict = true
addopts = -ra
testpaths = tests/
norecursedirs = .* build dist news tasks docs tests/artifacts
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

[isort]
atomic=true
lines_after_imports=2
lines_between_types=1
multi_line_output=5
not_skip=__init__.py
known_first_party =
    requirementslib
    tests
ignore_trailing_comma=true

[flake8]
exclude = .git,__pycache__,docs/,*.egg,build,data
select = E,W,F
ignore =
    # The default ignore list:
    E121,E123,E126,E226,E24,E704,
    # Our additions:
    # E127: continuation line over-indented for visual indent
    # E128: continuation line under-indented for visual indent
    # E129: visually indented line with same indent as next logical line
    # E222: multiple spaces after operator
    # E231: missing whitespace after ','
    # E402: module level import not at top of file
    # E501: line too long
    E222,E402,E501

[pytype]
# Space-separated list of files or directories to exclude.
exclude =
    **/*_test.py
    **/test_*.py
    tests/
    tasks/
    news/
    docs/
    build/
    dist/
    .vscode/
    **/__pycache__
    .eggs/
    src/*.egg-info
    src/*.dist-info
# Space-separated list of files or directories to process.
inputs =
    ./src/requirementslib
# All pytype output goes here.
output = .typeshed
# Paths to source code directories, separated by ':'.
pythonpath =
    ./src/requirementslib:
    /home/hawk/.virtualenvs/requirementslib-5MhGuG3C/lib/python3.7/site-packages
# Python version (major.minor) of the target code.
python_version = 2.7
# Comma separated list of error names to ignore.
disable =
    pyi-error
# Don't report errors.
report_errors = False
# Experimental: solve unknown types to label with structural types.
protocols = True
# Experimental: Only load submodules that are explicitly imported.
strict_import = True

[build-system]
requires = ["setuptools", "wheel"]

[mypy]
ignore_missing_imports=true
follow_imports=skip
html_report=mypyhtml
python_version=2.7
